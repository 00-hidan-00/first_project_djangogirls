name: CI Pipeline

on:
  push:
    branches:
      - master         # Run CI on pushes to main branch
      - develop        # and develop branch
  pull_request:        # Also run CI on pull requests targeting any branch
    branches:
      - master
      - develop
  workflow_dispatch:   # Enables a "Run workflow" button in the GitHub Actions UI for manual triggering

jobs:
  lint-test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: [ 3.10, 3.11, 3.12 ]  # Test against multiple Python versions

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        # Checks out your repository code so the workflow can access it

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
        # Installs the specified Python version from the matrix

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
        # Caches pip downloads and wheels between runs to speed up installs

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        # Upgrades pip and installs all project dependencies from requirements.txt

      - name: Cache pre-commit
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-
        # Caches pre-commit environments and hooks for faster runs

      - name: Install pre-commit
        run: pip install pre-commit
        # Installs pre-commit tool to run defined hooks

      - name: Run pre-commit hooks on all files
        env:
          PYTHONPATH: .
        run: pre-commit run --all-files --color always --show-diff-on-failure || true
        # Runs all pre-commit hooks against all files to check code style, formatting, etc.

      - name: Run type checking with mypy
        run: |
          pip install mypy
          mypy .
        # Installs mypy and runs static type checks on your codebase

      - name: Run linters (flake8)
        run: |
          pip install flake8
          flake8 .
        # Installs flake8 and runs linting to enforce code style and catch errors

      - name: Run tests (pytest)
        env:
          # Set environment variables needed for tests, e.g. Django settings
          DJANGO_SETTINGS_MODULE: core.settings
        run: |
          pip install pytest pytest-django
          pytest --maxfail=1 --disable-warnings -q
        # Installs pytest and runs tests quietly, stopping after first failure and suppressing warnings

  notify-success:
    needs: lint-test
    runs-on: ubuntu-22.04
    if: success()
    steps:
      - name: Notify success
        run: echo "âœ… All checks passed"
        # Simple notification that all checks have passed successfully